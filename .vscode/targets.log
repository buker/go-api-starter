make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.
 
# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sat Oct 30 20:58:00 2021

# Variables

# environment
LC_ALL = C
# environment
STARSHIP_SESSION_KEY = 4676665231394152
# environment
VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH = /home/buker/.vscode-server/bin/6cba118ac49a1b88332f312a8f67186f7f3c1643/remote/node_modules
# environment
LC_NAME = pl_PL.UTF-8
# environment
LC_NUMERIC = pl_PL.UTF-8
# environment
VSCODE_CWD = /home/buker
# environment
LC_ADDRESS = pl_PL.UTF-8
# default
MAKE_COMMAND := make
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
CLOUDSDK_METRICS_ENVIRONMENT_VERSION = 1.15.1
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/buker/Workspace/Private/go-api-starter
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
VIRTUALENVWRAPPER_PROJECT_FILENAME = .project
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
LANG = C
# default
.LOADED := 
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile
CURDIR := /home/buker/Workspace/Private/go-api-starter
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 2)
VERSION = $(shell git describe --tags --always --dirty --match=v* 2> /dev/null || echo "1.0.0")
# environment
MFLAGS = -pqrR
# environment
SSH_AUTH_SOCK = /run/user/1000/vscode-ssh-auth-sock-451377230
# default
.SHELLFLAGS := -c
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
ZSH = /home/buker/.oh-my-zsh
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
XDG_SESSION_TYPE = tty
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 1)
MODULE = $(shell go list -m)
# automatic
*F = $(notdir $*)
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
VIRTUALENVWRAPPER_HOOK_DIR = /home/buker/.virtualenvs
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile
SHELL = /bin/sh
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# makefile (from 'Makefile', line 7)
FSWATCH_FILE := './fswatch.cfg'
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /home/buker/.vscode-server/bin/6cba118ac49a1b88332f312a8f67186f7f3c1643/bin:/home/buker/.krew/bin:/home/buker/.vscode-server/bin/6cba118ac49a1b88332f312a8f67186f7f3c1643/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/local/go/bin:/home/buker/.cache/cloud-code/installer/google-cloud-sdk/bin:/home/buker/google-cloud-sdk/bin
# default
MAKEFILES := 
# environment
MOTD_SHOWN = pam
# environment
LC_MONETARY = pl_PL.UTF-8
# automatic
^F = $(notdir $^)
# environment
LC_TIME = pl_PL.UTF-8
# environment
SSH_CLIENT = 192.168.0.138 45208 22
# environment
VIRTUALENVWRAPPER_SCRIPT = /usr/share/virtualenvwrapper/virtualenvwrapper.sh
# environment
VSCODE_LOG_NATIVE = false
# environment
LC_TELEPHONE = pl_PL.UTF-8
# automatic
?F = $(notdir $?)
# environment
WORKON_HOME = /home/buker/.virtualenvs
# environment
LS_COLORS = 
# automatic
+F = $(notdir $+)
# environment
LESS = -R
# 'override' directive
GNUMAKEFLAGS := 
# environment
BROWSER = /home/buker/.vscode-server/bin/6cba118ac49a1b88332f312a8f67186f7f3c1643/bin/helpers/browser.sh
# environment
LOGNAME = buker
# makefile
.DEFAULT_GOAL := default
# makefile (from 'Makefile', line 3)
PACKAGES := github.com/buker/go-api-starter/cmd/server github.com/buker/go-api-starter/internal
# environment
USER = buker
# makefile (from 'Makefile', line 6)
PID_FILE := './.pid'
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# makefile (from 'Makefile', line 4)
LDFLAGS := -ldflags "-X main.Version=v0.0.1-dirty"
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
LC_MEASUREMENT = pl_PL.UTF-8
# environment
STARSHIP_SHELL = zsh
# environment
PAGER = less
# environment
VSCODE_AGENT_FOLDER = /home/buker/.vscode-server
# environment
_ = /home/buker/.vscode-server/bin/6cba118ac49a1b88332f312a8f67186f7f3c1643/node
# environment
LC_PAPER = pl_PL.UTF-8
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
VSCODE_IPC_HOOK_CLI = /run/user/1000/vscode-ipc-5d1f8cbc-adc1-4a23-8b7a-f5a6b6402c09.sock
# environment
XDG_SESSION_CLASS = user
# environment
VSCODE_AMD_ENTRYPOINT = vs/server/remoteExtensionHostProcess
# environment
HOME = /home/buker
# environment
XDG_SESSION_ID = 288
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# environment
VIRTUALENVWRAPPER_WORKON_CD = 1
# default
SUFFIXES := 
# environment
CLOUDSDK_METRICS_ENVIRONMENT = cloudcode.vscode
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# environment
LC_IDENTIFICATION = pl_PL.UTF-8
# environment
SSH_CONNECTION = 192.168.0.138 45208 192.168.0.120 22
# variable set hash-table stats:
# Load=97/1024=9%, Rehash=0, Collisions=5/136=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 50, inode 2454122): 20 files, no impossibilities.

# 20 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 64):
	@go vet $(PACKAGES)
	@golint $(PACKAGES)

default: help
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-10-29 21:54:46.401918096
#  File has been updated.
#  Successfully updated.

version:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	@echo $(VERSION)

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 60):
	rm -rf server coverage.out coverage-all.out

run-restart:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 30):
	@pkill -P `cat $(PID_FILE)` || true
	@printf '%*s\n' "80" '' | tr ' ' -
	@echo "Source file changed. Restarting server..."
	@go run ${LDFLAGS} cmd/server/main.go & echo $$! > $(PID_FILE)
	@printf '%*s\n' "80" '' | tr ' ' -

fmt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 69):
	@go fmt $(PACKAGES)

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  recipe to execute (from 'Makefile', line 26):
	go run ${LDFLAGS} cmd/server/main.go

help:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 15):
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 48):
	CGO_ENABLED=0 go build ${LDFLAGS} -a -o server $(MODULE)/cmd/server

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 19):
	@echo "mode: count" > coverage-all.out
	@$(foreach pkg,$(PACKAGES), \
		go test -p=1 -cover -covermode=count -coverprofile=coverage.out ${pkg}; \
		tail -n +2 coverage.out >> coverage-all.out;)

install-deps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 42):
	go mod tidy
	go mod download
	go mod verify

run-live:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 37):
	@go run ${LDFLAGS} cmd/server/main.go & echo $$! > $(PID_FILE)
	@fswatch -x -o --event Created --event Updated --event Renamed -r internal pkg cmd config | xargs -n1 -I {} make run-restart

.PHONY: default help test run run-restart install-deps build build-docker version clean lint fmt
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 52):
	docker build -f build/server/Dockerfile -t server .

# files hash-table stats:
# Load=18/1024=2%, Rehash=0, Collisions=0/64=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 38 / storage = 314 B / avg = 8 B
# current buf: size = 8162 B / used = 314 B / count = 38 / avg = 8 B

# strcache performance: lookups = 92 / hit rate = 58%
# hash-table stats:
# Load=38/8192=0%, Rehash=0, Collisions=0/92=0%
# Finished Make data base on Sat Oct 30 20:58:00 2021

 
